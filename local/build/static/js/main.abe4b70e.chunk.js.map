{"version":3,"sources":["Images/think.jpeg","FileCatcher.js","Map.js","Login.js","configure/config.js","Signup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fileReader","Option","Select","mapStyles","width","height","MapContainer","state","stores","props","location","data","redirect","selectvalue","filteredState","handleChange","value","setState","filteredValue","route","filter","i","myarr","map","latitude","longitude","console","log","componentDidMount","token","localStorage","getItem","verify","err","authData","redirection","to","displayMarkers","store","index","key","id","position","lat","lng","this","defaultValue","style","onChange","google","zoom","initialCenter","React","Component","GoogleApiWrapper","apiKey","csv2json","require","FileCatcher","stateData","stateRoute","buttonHandler","Redirection","pathname","handleFile","e","content","result","newdata","long","newroute","fileHandler","file","FileReader","onloadend","readAsText","padding","margin","boxShadow","type","target","files","onClick","NormalLoginForm","email","password","users","eventHandler","event","name","Firebase","firestore","collection","get","then","querySnapshot","forEach","user","push","handleSubmit","preventDefault","form","validateFields","values","length","axios","post","res","setItem","catch","alert","redirectionPage","getFieldDecorator","class","onSubmit","className","Item","marginLeft","fontFamily","fontSize","lineHeight","letterSpacing","rules","message","required","prefix","color","placeholder","Password","valuePropName","initialValue","htmlType","backgroundColor","WrappedNormalLoginForm","Form","create","firebase","initializeApp","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","NormalSignUpForm","username","confirmpassword","check","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","emailCheck","add","label","hasFeedback","validator","validateToNextPassword","onBlur","App","display","justifyContent","Boolean","window","hostname","match","routing","exact","path","component","Login","SignUp","Map","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abe4b70e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/think.b2b97b7a.jpeg\";","import React, { Component } from 'react'\nimport readXlsxFile from 'read-excel-file'  \nimport xlsxParser from 'xlsx-parse-json';\nimport {Redirect} from 'react-router-dom'\nimport {Button} from 'antd'\n// import {img} from './cl.png'\nconst csv2json = require('csvjson-csv2json');\nconst parser = require('js-sql-parser');\n\n\nlet fileReader;\n\n\nexport class FileCatcher extends Component {\n    state={\n        stateData:[],\n        redirect:false,\n        stateRoute:[]\n    }\n    buttonHandler=()=>{\n        this.setState({redirect:true})\n    }\n    Redirection=()=>{\n        if(this.state.redirect){\n    return<Redirect to={{ pathname: \"/map\", state: {token:this.state.token,data:this.state.stateData,route:this.state.stateRoute} }} />\n            \n        }\n    }\n    handleFile = (e) => {\nlet data=[];\n        const content = fileReader.result;\n        data=csv2json(content);\n        console.log(\"to check\",data)\nlet newdata=data.map((i)=>{\n    return({\"latitude\":i.lat,\"longitude\":i.long})\n})\nlet newroute=data.map((i)=>{\n    if(i.route!==\"NOTFOUND\"){\n        return ({\"latitude\":i.lat,\"longitude\":i.long,\"route\":i.route})\n    \n    }\n})\n\n\nthis.setState({stateData:newdata,stateRoute:newroute})\n      }\n    fileHandler=(file)=>{\n        fileReader=new FileReader();\n        fileReader.onloadend = this.handleFile;\n  fileReader.readAsText(file);\n    }\n    render() {\n        return (\n            <div style={{padding:\"20px 20px\",margin:\"100px auto\",height:\"300px\",width:\"300px\",boxShadow:\" 0 5px 10px 8px #888888\"}}>{this.Redirection()}\n               <h1>Choose Your File(.csv format)</h1>\n               {/* <img src={img}></img> */}\n                <input type=\"file\" onChange={(e)=> this.fileHandler(e.target.files[0])}></input>\n       <br/><br/><br/>   <Button type=\"primary\" onClick={this.buttonHandler}>Proceed</Button>\n            </div>\n        )\n    }\n}\n\nexport default FileCatcher\n","import React from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {verify} from 'jsonwebtoken'\nimport {Select}from 'antd'\nimport { Map, GoogleApiWrapper,Marker} from 'google-maps-react';\nconst { Option } = Select;\nconst mapStyles = {\n    width: '100%',\n    height: '100%',\n  };\n  \nclass MapContainer extends React.Component {\n   \n    state = {\n        stores: this.props.location.state.data,\n        redirect:false,\n        selectvalue:\"\",\n        filteredState:[]\n      }\n      handleChange=(value)=>{\nthis.setState({selectvalue:value})\nlet filteredValue = this.props.location.state.route.filter((i)=>i.route === value)\nvar myarr=filteredValue.map((i)=>{\n    return ({\"latitude\":i.latitude,\"longitude\":i.longitude})\n})\nthis.setState({stores:myarr})\nconsole.log(filteredValue)\n      }\n      componentDidMount=()=>{\n        console.log(this.props.location.state.route);\n\n       var token = localStorage.getItem('mytoken')\n        verify(token,'secretkey',(err,authData)=>{\n            console.log(\"inside verify\")\n            if(err){\n                this.setState({redirect:true})\n            }\n        })\n    }\n      redirection=()=>{\n          if(this.state.redirect){\n              return <Redirect to='/login'></Redirect>\n          }\n      }\n      displayMarkers = () => {\n        return this.state.stores.map((store, index) => {\n          return <Marker key={index} id={index} position={{\n           lat: store.latitude,\n           lng: store.longitude\n         }}\n          />\n        })\n      }\n    render(){\n    return (\n        <div>{this.redirection()}\n        <h1>Select Route</h1>\n          <Select defaultValue=\"ROUTE 1\" style={{ width: 120 }} onChange={this.handleChange}>\n      <Option value=\"ROUTE 1\">ROUTE 1</Option>\n      <Option value=\"ROUTE 2\">ROUTE 2</Option>\n      <Option value=\"ROUTE 3\">ROUTE 3</Option> \n      <Option value=\"ROUTE 4\">ROUTE 4</Option>\n      <Option value=\"ROUTE 5\">ROUTE 5</Option>\n      <Option value=\"ROUTE 6\">ROUTE 6</Option>\n       <Option value=\"ROUTE 7\">ROUTE 7</Option>\n      <Option value=\"ROUTE 8\">ROUTE 8</Option>\n      <Option value=\"ROUTE 9\">ROUTE 9</Option>\n    </Select>\n            <Map\n             google={this.props.google}\n             zoom={8}\n             style={mapStyles}\n             initialCenter={{ lat: 17.350627, lng: 78.492849}} \n            >\n                {/* 17.350627\t */}\n                 {this.displayMarkers()}\n            </Map>\n        </div>\n    )}\n}\nexport default GoogleApiWrapper({\n    apiKey:'AIzaSyDDLeoJCQgm7xZuccfqeZ8wMmL_Cov5oqU'\n})(MapContainer)\n","import React from 'react'\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport './Login.css'\nimport 'antd/dist/antd.css';\nimport './App.css'\nimport axios from 'axios'\nimport FileCatcher from './FileCatcher'\nimport {Redirect} from 'react-router-dom'\nimport Firebase from 'firebase'\nlet redirection=false;\nclass NormalLoginForm extends React.Component {\n    state={\n        email:\"\",\n        password:\"\",\n        users:[],\n        redirect:false,\n        token:\"\"\n    }\n    eventHandler=(event)=>{\n        this.setState({[event.target.name]:event.target.value})\n    }\n    componentDidMount=()=>{\n        let users=[]\n        Firebase.firestore().collection(\"users\").get().then((querySnapshot)=>{\n            querySnapshot.forEach((i)=>{\n                var user={\n                    email:i.data().email,\n                    password:i.data().password\n                }\n                users.push(user);\n\n            })\n        })\n        this.setState({users})\n    }\n  handleSubmit = e => {\n      var arr=[]\n   \n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n          for(let i=0;i<this.state.users.length;i++){\n              if(this.state.users[i].email===this.state.email&&this.state.users[i].password===this.state.password)\n         {\n             redirection=true;\n            //  axios.post('/api/login',{\n             \n             axios.post(' https://cors-anywhere.herokuapp.com/https://googlemapsmarkernode.herokuapp.com/api/login',{\n        email:this.state.email,\n        password:this.state.password\n    })\n    .then((res)=>{\nthis.setState({redirect:true})\n        // <Redirect to=\"/\">\n        localStorage.setItem('mytoken',res.data.token)\n        this.setState({token:res.data.token})\n    })\n    .catch((err)=>{\n    })           \n\n         break;\n            }else{\n                redirection=false\n         }\n            }\n            if(redirection){\n                console.log(\"done\")\n            }else{\n                alert(\"Credentials Incorrected\")\n            }\n      }\n    });\n  };\nredirectionPage=()=>{\nif(this.state.redirect){\n    // localStorage.setItem('mytoken',this.state.token)\n    return<Redirect to={{ pathname: \"/filecatcher\", state: {token:this.state.token} }} />\n}\n\n}\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n    <div >\n        <div class=\"main-bg\">\n        <div class=\"box-conatiner\">\n        {this.redirectionPage()}\n        <div style={{margin:'10px auto'}}>\n            {/* <span className=\"login100\" style={{margin:'150px 110px 0px 300px',fontSize:\"40px\"}}>Login</span> */}\n      <Form onSubmit={this.handleSubmit} className=\"login-form\" style={{margin:'40px 110px 0px 300px'}}>\n    \n     \n        <Form.Item>\n        <h1 style={{marginLeft:\"30px\",fontFamily:\"Montserrat\",fontSize:\"50px\",lineHeight:1.5,letterSpacing:2.95,}}>LOGIN</h1>\n          {getFieldDecorator('email', {\n            rules: [{\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              { required: true, message: 'Please input your Email!' }],\n          })(\n            <Input onChange={this.eventHandler} value={this.state.email}name=\"email\"\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Email\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input.Password onChange={this.eventHandler} value={this.state.password}name=\"password\"\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true,\n          })}\n          \n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"style={{\n    backgroundColor: \"rgb(11,235,180)\",color:\"grey\"}} >\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n      </div>\n      \n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\nexport default WrappedNormalLoginForm\n// ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\n","import firebase from 'firebase'\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDDLeoJCQgm7xZuccfqeZ8wMmL_Cov5oqU\",\n    authDomain: \"jwt1-262708.firebaseapp.com\",\n    databaseURL: \"https://jwt1-262708.firebaseio.com\",\n    projectId: \"jwt1-262708\",\n    storageBucket: \"jwt1-262708.appspot.com\",\n    messagingSenderId: \"175444826255\",\n    appId: \"1:175444826255:web:149ad2dcedec9ad85db8fa\"\n  };\n  // Initialize Firebase\n  const Firebase=firebase.initializeApp(firebaseConfig);\n  export default Firebase","import React from 'react'\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\nimport {Redirect} from 'react-router-dom'\nimport 'antd/dist/antd.css';\nimport Firebase from './configure/config'\nvar db=Firebase.firestore();\nclass NormalSignUpForm extends React.Component {\n    state={\n        username:\"\",\n        email:\"\",\n        password:\"\",\n        confirmpassword:\"\",\n        check:false,\n        redirect:false,\n        users:[]\n    }\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ check: this.state.check || !!value });\n      };\n      compareToFirstPassword = (rule, value, callback) => {\n        const { form } = this.props;\n        if (value && value !== form.getFieldValue('password')) {\n          callback('Two passwords that you enter is inconsistent!');\n        } else {\n          callback();\n        }\n      };\n      componentDidMount=()=>{\n        let users=[]\n        Firebase.firestore().collection(\"users\").get().then((querySnapshot)=>{\n            querySnapshot.forEach((i)=>{\n                users.push(i.data().email);\n\n            })\n        })\n        this.setState({users})\n    }\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        let emailCheck=false;\n        for(let i=0;i<this.state.users.length;i++){\n          if(this.state.email===this.state.users[i]){\n            emailCheck=true;\n            break;\n          }\n        }\n        if(!emailCheck){\n        // console.log(\"state\",this.state)\ndb.collection(\"users\").add({\n    username:this.state.username,\n    email:this.state.email,\n    password:this.state.password\n}).then((res)=>{alert(\"Account Created\")}\n)\n.catch((err)=>{})\n    this.setState({redirect:true})\n}else{\n  alert(\"email already exist\")\n}\n}\n    });\n  };\n  eventHandler=(e)=>{\nthis.setState({[e.target.name]:e.target.value})\n  }\nredirection=()=>{\n  if(this.state.redirect){\n    return <Redirect to=\"/login\"></Redirect>\n  }\n}\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n\n        <div class=\"main-bg\">\n        <div class=\"box-conatiner\">\n    {this.redirection()}\n      <Form onSubmit={this.handleSubmit} className=\"login-form\" style={{margin:'20px 110px 20px 300px'}}>\n        <Form.Item label=\"User Name\">\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input onChange={this.eventHandler} value={this.state.username}name=\"username\"\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item label=\"E-mail\">\n          {getFieldDecorator('email', {\n            rules: [{\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n                { required: true, message: 'Please input your Email!' }],\n          })(\n            <Input onChange={this.eventHandler} value={this.state.email}name=\"email\"\n              prefix={<Icon type=\"email\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Email\"\n            />,\n          )}\n        </Form.Item>\n        \n        <Form.Item label=\"Password\" hasFeedback>\n        \n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' },\n            {\n                validator: this.validateToNextPassword,\n              }\n        ],\n          })(\n            <Input.Password onChange={this.eventHandler} value={this.state.password}name=\"password\"\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n\n        <Form.Item label=\"Confirm Password\" hasFeedback>\n        \n          {getFieldDecorator('confirmpassword', {\n            rules: [{ required: true, message: 'Please Re-Enter your Password!' },\n            {\n                validator: this.compareToFirstPassword,\n              }],\n          })(\n            <Input.Password onBlur={this.handleConfirmBlur} onChange={this.eventHandler} value={this.state.confirmpassword}name=\"confirmpassword\"\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true,\n          })}\n          \n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\"style={{\n    backgroundColor: \"rgb(11,235,180)\",color:\"grey\"}}>\n            Sign Up\n          </Button>\n        </Form.Item>\n      </Form></div></div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalSignUpForm);\nexport default WrappedNormalLoginForm\n// ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\n","import React from 'react';\nimport './App.css';\nimport Map from './Map'\nimport Login from './Login'\nimport SignUp from './Signup'\nimport { Redirect, BrowserRouter,Link } from \"react-router-dom\";\nimport Img from './Images/think.jpeg'\nfunction App() {\n  return (\n    \n    <div  style={{backgroundColor:\"#f6f5f1\",height:\"700px\",padding:\"50px 50px\"}}>\n   <ul style={{display:\"flex\",justifyContent:\"space-around\"\n  }}>\n    <li style={{boxShadow:\"5px 10px 18px grey\",backgroundColor:\"rgb(0,244,180)\"}}><Link to=\"/signup\"style={{fontSize:\"90px\",padding:\"5px 5px\"}}>SignUp</Link></li>\n    <li style={{boxShadow:\"5px 10px 18px grey\",backgroundColor:\"rgb(0,244,180)\"}}><Link to=\"/login\"style={{fontSize:\"90px\",padding:\"5px 5px\"}}>Login</Link></li>\n    </ul>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Login from './Login'\nimport SignUp from './Signup'\nimport Map from './Map'\nimport FileCatcher from './FileCatcher'\nimport * as serviceWorker from './serviceWorker';\nimport {\n    BrowserRouter,\n    Route,\n    Switch,\n    Link\n  } from 'react-router-dom'\n// import { Switch } from 'antd';\n// ReactDOM.render(<App />, document.getElementById('root'));\nconst routing=(\n    <BrowserRouter>\n    <div>\n        <Switch>\n        <Route exact path=\"/\" component={App}></Route>\n        <Route exact path=\"/login\" component={Login}></Route>\n        <Route exact path=\"/signup\" component={SignUp}></Route>\n        <Route exact path=\"/map\" component={Map}></Route>\n        <Route exact path=\"/filecatcher\"component={FileCatcher}></Route>\n        </Switch>\n    </div>\n    </BrowserRouter>\n)\nReactDOM.render(routing,document.getElementById('root'))\nserviceWorker.unregister();\n"],"sourceRoot":""}